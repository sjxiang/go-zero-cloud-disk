// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	person_pool "github.com/sjxiang/go-zero-cloud-disk/core/internal/handler/person_pool"
	upload "github.com/sjxiang/go-zero-cloud-disk/core/internal/handler/upload"
	"github.com/sjxiang/go-zero-cloud-disk/core/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: userLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/detail/:identity",
				Handler: userDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/code/send",
				Handler: verifyCodeSendHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: userRegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/repository/save",
					Handler: person_pool.UserRepositorySaveHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/file/list",
					Handler: person_pool.UserFileListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/file/name/update",
					Handler: person_pool.UserFileNameUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/folder/create",
					Handler: person_pool.UserFolderCreateHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/user/file/delete",
					Handler: person_pool.UserFileDeleteHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Auth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/file/upload",
					Handler: upload.FileUploadHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/upload/prepare",
					Handler: upload.FileUploadPrepareHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/upload/chunk",
					Handler: upload.FileUploadChunkHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/file/upload/chunk/complete",
					Handler: upload.FileUploadChunkCompleteHandler(serverCtx),
				},
			}...,
		),
	)
}
