// api 语法版本
syntax = "v1"

info(
	title: "云盘服务"
	desc: "cloud-disk"
	author: "sjxiang"
	email: "1535484943@qq.com"
	version: "v0.1"
	date: "2022-11-28"
)

// ==== 用户系统相关

type (
	UserLoginReq {
		Name     string `json:"name"`
		Password string `json:"password"`
	}
	UserLoginResp {
		Token string `json:"token"`
	}
)

type (
	UserDetailReq {
		Identity string `path:"identity"`
	}
	UserDetailResp {
		Name  string `json:"name"`
		Email string `json:"email"`
	}
)

type (
	VerifyCodeSendReq {
		Email string `json:"email"`
	}
	VerifyCodeSendResp {
		Code string `json:"code"`
	}
)

type (
	UserRegisterReq {

		// 用户名
		Name string `json:"name"`
		// 密码
		Password string `json:"password"`
		// 邮箱
		Email string `json:"email"`
		// 验证码
		Code string `json:"code"`
	}
	UserRegisterResp {
	}
)

service core-api {
	
	// 用户登录
	@handler userLogin
	post /user/login (UserLoginReq) returns (UserLoginResp)
	
	// 用户详情
	@handler userDetail
	get /user/detail/:identity (UserLoginReq) returns (UserLoginResp)
	
	// 邮箱验证码发送
	@handler verifyCodeSend
	post /user/code/send (VerifyCodeSendReq) returns (VerifyCodeSendResp)
	
	// 用户注册
	@handler userRegister
	post /user/register (UserRegisterReq) returns (UserRegisterResp)
}

// === 用户文件相关

@server (
	middleware: Auth
	group: person_pool
)

service core-api {
	
	// 用户 - 文件的关联存储
	@handler userRepositorySave
	post /user/repository/save (UserRepositorySaveReq) returns (UserRepositorySaveResp)
	
	// 用户 - 文件列表
	@handler userFileList
	get /user/file/list (UserFileListReq) returns (UserFileListResp)
	
	// 用户 - 文件名称修改
	@handler userFileNameUpdate
	post /user/file/name/update (UserFileNameUpdateReq) returns (UserFileNameUpdateResp)
	
	// 用户 - 文件夹创建
	@handler userFolderCreate
	post /user/folder/create (UserFolderCreateReq) returns (UserFolderCreateResp)
	
	// 用户 - 文件删除
	@handler userFileDelete
	delete /user/file/delete (UserFileDeleteReq) returns (UserFileDeleteResp)
	
	// 用户 - 文件移动
	@handler userFileMove
	put /user/file/move (UserFileMoveReq) returns (UserFileMoveResp)
	
}

type (
	UserRepositorySaveReq {
		Parentld           int64  `json:"parentId"`
		RepositoryIdentity string `json:"repositoryIdentity"`
		Ext                string `json:"ext"`
		Name               string `json:"name"`
	}
	UserRepositorySaveResp {
		Identity string `json:"identity"`
	}
)

type (
	UserFileListReq {
		Id   int64 `json:"id,optional"`
		Page int   `json:"page,optional"`
		Size int   `json:"size,optional"`
	}
	UserFileListResp {
		List  []*UserFile `json:"list"`
		Count int64       `json:"count"`
	}
	UserFile {
		Id                 int64  `json:"id"`
		Identity           string `json:"identity"`
		RepositoryIdentity string `json:"repositoryIdentity"`
		Name               string `json:"name"`
		Size               string `json:"size"`
		Path               string `json:"path"`
		Ext                string `json:"ext"`
	}
)

type (
	UserFileNameUpdateReq {
		Identity string `json:"identity"`
		Name     string `json:"name"`
	}
	UserFileNameUpdateResp struct{}
)

type (
	UserFolderCreateReq {
		Parentld int64  `json:"parent_id"`
		Name     string `json:"name"`
	}
	UserFolderCreateResp {
		Identity string `json:"identity"`
	}
)

type (
	UserFileDeleteReq {
		Identity string `json:"identity"`
	}
	UserFileDeleteResp {
	}
)

type (
	UserFileMoveReq {
		Identity       string `json:"identity"`        // 文件 uuid
		Parentldentity string `json:"parent_identity"` // 文件夹、目录 uuid
	}
	UserFileMoveResp struct{}
)

// ===================== 文件共享相关

@server (
	middleware: Auth
	group: share
)

service core-api {
	
	// 创建分享记录
	
	// 获取资源详情
	
	// 通过分享的记录保存资源
	
}

// ===================== 文件上传相关

@server (
	middleware: Auth
	group: upload // handler 分组，不是路由前缀分组
)

service core-api {
	
	// 文件上传（粗粒度，formdata header 取数据，上传 cos、关联 repo）
	@handler fileUpload
	post /file/upload (FileUploadReq) returns (FileUploadResp)
	
	// 文件上传前的基本信息处理（秒传，资源有，那就返回 repo uuid，回头关联下；没有，提前给份 oss 上传凭证）
	@handler fileUploadPrepare
	post /file/upload/prepare (FileUploadPrepareReq) returns (FileUploadPrepareResp)
	
	// 文件分片上传
	@handler fileUploadChunk
	post /file/upload/chunk (FileUploadChunkReq) returns (FileUploadChunkResp)
	
	// 文件分片上传完成（即通知）
	@handler fileUploadChunkComplete
	post /file/upload/chunk/complete (FileUploadChunkCompleteReq) returns (FileUploadChunkCompleteResp)
}

type (
	FileUploadReq { // formdata
		Hash string `json:"hash,optional"`
		Name string `json:"name,optional"`
		Ext  string `json:"ext,optional"`
		Size int64  `json:"size,optional"`
		Path string `json:"path,optional"`
	}
	FileUploadResp {
		Identity string `json:"identity"`
		Ext      string `json:"ext"`
		Name     string `json:"name"`
	}
)

type (
	FileUploadPrepareReq {
		Md5  string `json:"md5"`
		Name string `json:"name"`
		Ext  string `json:"ext"`
	}
	FileUploadPrepareResp {
		Identity string `json:"identity"`
		UploadId string `json:"upload_id"`
		Key      string `json:"key"`
	}
)

type (
	FileUploadChunkReq { // formdata
		// key
		// upload_id
		// part_number

	}
	FileUploadChunkResp {
		Etag string `json:"etag"` // md5
	}
)

type (
	FileUploadChunkCompleteReq {
		Key        string      `json:"key"`
		UploadId   string      `json:"upload_id"`
		CosObjects []CosObject `json:"cos_objects"`
	}
	FileUploadChunkCompleteResp {
	}
	CosObject {
		PartNumber int    `json:"part_number"`
		Etag       string `json:"etag"`
	}
)